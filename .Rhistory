install.packages(SPEI)
install.packages(SPEI)
install.packages("SPEI")
library(SPEI)
load("~/Documents/UdeSA/Tesis/Vietnam Drought/input/Phu Yen (1-4).xlsx")
load("~/Documents/UdeSA/Tesis/Vietnam Drought/input/Phu Yen (1-4).xlsx")
load("~/Documents/UdeSA/Tesis/Vietnam Drought/input/Phu Yen (1-4).numbers")
load("~/Documents/UdeSA/Tesis/Vietnam Drought/input/2013-2017 metric.numbers")
readRDS("Phu Yen (1-4).xlsx")
read.csv("Phu Yen (1-4).numbers")
directory
library(readxl)
Phu_Yen_1_4_ <- read_excel("Documents/UdeSA/Tesis/Vietnam Drought/input/Phu Yen (1-4).xlsx")
View(Phu_Yen_1_4_)
Project$PET<-hargreaves(Tmin = Project$T2M_MIN, Tmax = Project$T2M_MAX, lat = 13.17 )
project$PET<-hargreaves(Tmin = project$T2M_MIN, Tmax = project$T2M_MAX, lat = 13.17 )
install.packages("projects")
Project$PET<-hargreaves(Tmin = Project$T2M_MIN, Tmax = Project$T2M_MAX, lat = 13.17 )
Project$PET<-hargreaves(Tmin = Project$T2M_MIN, Tmax = Project$T2M_MAX, lat = 13.17 )
install.packages("ProjectTemplate")
Project$PET<-hargreaves(Tmin = Project$T2M_MIN, Tmax = Project$T2M_MAX, lat = 13.17 )
install.packages("SPEI")
library(SPEI)
library(readxl)
bentre_corrected <- read_excel("Documents/UdeSA/Tesis/Vietnam Drought/input/bentre-corrected.xls")
View(bentre_corrected)
library(SPEI)
spi3<-spi(bentre_corrected$prec)
spi3<-spi(bentre_corrected$prec, 3)
spi3
plot.spei(spi3)
install.packages(SPEI)
install.packages("SPEI")
install.packages("SPEI")
library(SPEI)
spi3<-spi(bentre_corrected$prec, 3)
plot.spei(spi3)
plot,spei(spi3)
plot(spi3)
spi12<-spi(bentre_corrected$prec, 12)
plot(spi12)
View(spi3)
plot(spi3)
library(readxl)
bentre_final <- read_excel("Documents/UdeSA/Tesis/Vietnam Drought/bentre_final.xls")
View(bentre_final)
detach("package:SPEI", unload = TRUE)
library(SPEI)
bentre_final<-hargreaves(Tmin = bentre_final$tmin, Tmax = bentre_final$tmax, lat = 10.235)
bentre_final$PET
View(bentre_final)
library(readxl)
bentre_final <- read_excel("Documents/UdeSA/Tesis/Vietnam Drought/bentre_final.xls")
View(bentre_final)
bentre_final<-hargreaves(Tmin = bentre_final$tmin, Tmax = bentre_final$tmax, lat = 10.235)
library(readxl)
bentre_final <- read_excel("Documents/UdeSA/Tesis/Vietnam Drought/bentre_final.xls")
View(bentre_final)
View(bentre_final)
bentre_final$PET<-hargreaves(Tmin = bentre_final$tmin, Tmax = bentre_final$tmax, lat = 10.235)
cwbal<-bentre_final$prec-bentre_final$PET
spei3<-spei(cwbal, 3)
plot(spei3)
spei6<-spei(cwbal,6)
plot(spei6)
spi(bentre_final, 3)
spi(bentre_final$prec, 3)
spi3<-spi(bentre_final$prec, 3)
plot(spi3)
bentre_final$SPI3<-spi(bentre_final$prec, 3)
bentre_final$SPI3<-spei(cwbal, 3)
plot(spi(bentre_final, frequency(12), start(c(1981,1), scale(1))))
View(spei3)
write_xlsx(spei3, "spei_results.xlsx")
library(openxlsx)
write_xlsx(spei3, "spei_results.xlsx")
write.xlsx(spei3, "spei_results.xlsx")
view(spei3)
View(spei3)
nc_data
# Ahora x_2 y x_1 están altamente correlacionadas
# Creamos una nueva lista para almacenar las bases de datos
bases_de_datos_2 <- list()
# Voy a definir la función para generar cada base de datos
funcion_base_datos_2 <- function(semilla) {
set.seed(semilla)
x_1 <- runif(100, min = 0, max = 100)
x_2 <- scale(matrix( rnorm(100), ncol=1 ))
xs <- cbind(scale(x_1),x_2)
c1 <- var(xs)
chol1 <- solve(chol(c1))
newx <- xs
newc <- matrix(c(1 , 0.987, 0.987, 1 ), ncol=2)
eigen(newc)
chol2 <- chol(newc)
xm2 <- newx%*% chol2 * sd(x_1) + mean(x_1)
x_2 <- xm2[, 2]
x_3 <- runif(100, min = 0, max = 100)
u <- rnorm(100, mean = 0, sd = sqrt(1300))
# Dado que conocemos los verdaderos coeficientes, calculamos 'y':
y <- 200 + 4*x_1 + 4*x_2 + (-4)*x_3 + u
# Creamos el data frame
datos <- data.frame(y, x_1, x_2, x_3, u)
return(datos)
}
# Creamos 50 bases de datos distintas
for (semilla in 1:50) {
bases_de_datos_2[[semilla]] <- funcion_base_datos_2(semilla)
}
# 1.6)
# Creamos una nueva matriz para almacenar los coeficientes de regresión
resultados_2 <- matrix(0, nrow = 50, ncol = 4)  # 50 filas para las 50 muestras, 4 columnas para los 4 coeficientes (b_0, b_1, b_2, b_3)
# Estimamos los coeficientes para cada base de datos
for (i in 1:50) {
modelo_2 <- lm(y ~ x_1 + x_2 + x_3, data = bases_de_datos_2[[i]])
resultados_2[i, ] <- coef(modelo_2)
}
# Convertir la matriz resultados a un dataframe
resultados_df_2 <- as.data.frame(resultados_2)
# Asignar nombres a las columnas
colnames(resultados_df_2) <- c("BHat_0", "BHat_1", "BHat_2", "BHat_3")
View(resultados_2)
resultados_5 <- matrix(0, nrow = 50, ncol = 3)  # 50 filas para las 50 muestras, 4 columnas para los 4 coeficientes (b_0, b_1, b_2, b_3)
# Estimamos los coeficientes para cada base de datos
for (i in 1:50) {
modelo_5 <- lm(y ~ x_1 + x_2, data = bases_de_datos_2[[i]])
resultados_5[i, ] <- coef(modelo_5)
}
View(resultados_5)
ajustar_modelo_4 <- function(bases_de_datos_2) {
modelo_4 <- lm(y ~ x_1 + x_3, data = bases_de_datos_2)  # Ajustar el modelo
return(coeficientes <- coef(modelo_4))         # Devolver los coeficientes estimados
}
# Aplicar la función a cada base de datos
resultados_4 <- lapply(bases_de_datos_2, ajustar_modelo_4)
# Convertir la lista de resultados en una matriz
matriz_resultados_4 <- do.call(rbind, resultados_4)
# Convertir la matriz resultados a un dataframe
resultados_df_4 <- as.data.frame(matriz_resultados_4)
# Asignar nombres a las columnas
colnames(resultados_df_4) <- c("BHat_0", "BHat_1", "BHat_3")
View(resultados_df_4)
ggplot(data=cuarta_estimacion_df, aes(BHat_1, BHat_3)) + geom_point() + ggtitle('Cuarta Estimación: BHat1 vs BHat3') +
geom_hline(yintercept=-4, col= "red") + geom_vline(xintercept=8, col= "red")
#Guardamos los datos en excel
library(writexl)
write_xlsx(resultados_df_4, "output/cuarta_estimacion.xlsx")
setwd("/Users/juansegundozapiola/Documents/Maestria/Econometría Av/TPs/TP")
setwd("/Users/juansegundozapiola/Documents/Maestria/Econometría Av/TPs/TP")
rm(list = ls())
#Directorio
setwd("/Users/juansegundozapiola/Documents/Maestria/Econometría Av/TPs/TP")
getwd()
setwd("/Users/juansegundozapiola/Documents/Maestria/Econometría Av/TPs/TP")
# 0) Directory and Libraries
rm(list=ls())
#set directory
setwd("/Users/juansegundozapiola/Documents/Maestria/TesisMAE")
#libraries
library(haven)
library(dplyr)
library(sf)
library(sp)
library(ncdf4)
library(here)
library(ggplot2)
library(foreign)
library(raster)
#open database that contain EA's coordinates
prop_improved <- read_dta("input/prop_improved.dta")
#keep EA's id and coordinates
ea_coordinates <- prop_improved %>% select(-prop_imp_R1, -prop_imp_R2,
-prop_imp_R3, -prop_imp_R4)
ea_coordinates <- prop_improved %>% select::(-prop_imp_R1, -prop_imp_R2,
ea_coordinates <- prop_improved %>% select(-prop_imp_R1, -prop_imp_R2,
-prop_imp_R3, -prop_imp_R4)
library(dplyr)
ea_coordinates <- prop_improved %>% select(-prop_imp_R1, -prop_imp_R2,
-prop_imp_R3, -prop_imp_R4)
#EA's Coordinates
malawi <- read.csv("input/ea_coordinates.csv")
#SPEI Raster - 3 month SPEI
SPEI_3 <- brick(here::here("/Users/juansegundozapiola/Documents/UdeSA/Thesis/
Africa_spei03.nc"), varname= "spei")
malawi_boundary <- st_read("/Users/juansegundozapiola/Documents/UdeSA/Thesis/
mwi_adm_nso_hotosm_20230405_shp/mwi_admbnda_adm0_nso_
hotosm_20230405.shp")
#SPEI Raster - 3 month SPEI
SPEI_3 <- brick(here::here("/Users/juansegundozapiola/Documents/UdeSA/Thesis/
Africa_spei03.nc"), varname= "spei")
SPEI_3 <- brick(here::here("/Users/juansegundozapiola/Documents/UdeSA/Thesis/
Africa_spei03.nc"), varname= "spei")
library(ncdf4)
SPEI_3 <- brick(here::here("/Users/juansegundozapiola/Documents/UdeSA/Thesis/
Africa_spei03.nc"), varname= "spei")
library(haven)
library(dplyr)
library(sf)
library(sp)
library(ncdf4)
library(here)
library(ggplot2)
library(foreign)
library(raster)
ea_coordinates <- prop_improved %>% select(-prop_imp_R1, -prop_imp_R2,
-prop_imp_R3, -prop_imp_R4)
#SPEI Raster - 3 month SPEI
SPEI_3 <- brick(here::here("/Users/juansegundozapiola/Documents/UdeSA/Thesis/
Africa_spei03.nc"), varname= "spei")
SPEI_3 <- brick(here::here("/Users/juansegundozapiola/Documents/UdeSA/Thesis/Africa_spei03.nc"), varname= "spei")
plot(SPEI_3$X1990.06.01)
malawi_boundary <- st_read("/Users/juansegundozapiola/Documents/UdeSA/Thesis/
mwi_adm_nso_hotosm_20230405_shp/mwi_admbnda_adm0_nso_
hotosm_20230405.shp")
malawi_boundary <- st_read("/Users/juansegundozapiola/Documents/UdeSA/Thesis/mwi_adm_nso_hotosm_20230405_shp/mwi_admbnda_adm0_nso_hotosm_20230405.shp")
# Crop and mask the raster using Malawi's boundary
malawi_crop <- crop(SPEI_3, extent(malawi_boundary))
malawi_mask <- mask(malawi_crop, malawi_boundary)
plot(malawi_mask$X2009.02.01) #
points(malawi$longitude, malawi$latitude, pch = 20, col = "darkred",  cex = 0.5)
# Add the Malawi boundary as a thin border
plot(st_geometry(malawi_boundary), add = TRUE, border = "black", lwd = 0.5)
plot(malawi_mask$X2009.02.01, axes = FALSE, box = FALSE) #
points(malawi$longitude, malawi$latitude, pch = 20, col = "darkred",  cex = 0.5)
# Add the Malawi boundary as a thin border
plot(st_geometry(malawi_boundary), add = TRUE, border = "black", lwd = 0.5)
#Plot example.
plot(malawi_mask$X2009.02.01, axes = FALSE, box = FALSE)
axis(1, labels = FALSE)  # X-axis without labels
axis(2, labels = FALSE)  # Y-axis without labels
points(malawi$longitude, malawi$latitude, pch = 20, col = "darkred",  cex = 0.5)
# Add the Malawi boundary as a thin border
plot(st_geometry(malawi_boundary), add = TRUE, border = "black", lwd = 0.5)
plot(malawi_mask$X2009.02.01, axes = FALSE, box = FALSE)
box(lwd = 2)
points(malawi$longitude, malawi$latitude, pch = 20, col = "darkred",  cex = 0.5)
# Add the Malawi boundary as a thin border
plot(st_geometry(malawi_boundary), add = TRUE, border = "black", lwd = 0.5)
plot(malawi_mask$X2009.02.01, axes = FALSE, box = FALSE)
box(lwd = 1)
points(malawi$longitude, malawi$latitude, pch = 20, col = "darkred",  cex = 0.5)
# Add the Malawi boundary as a thin border
plot(st_geometry(malawi_boundary), add = TRUE, border = "black", lwd = 0.5)
#Plot example.
plot(malawi_mask$X2009.02.01, axes = FALSE, box = FALSE, zlim = c(-2, 2)))
plot(malawi_mask$X2009.02.01, axes = FALSE, box = FALSE, zlim = c(-2, 2))
box(lwd = 1)
points(malawi$longitude, malawi$latitude, pch = 20, col = "darkred",  cex = 0.5)
# Add the Malawi boundary as a thin border
plot(st_geometry(malawi_boundary), add = TRUE, border = "black", lwd = 0.5)
plot(malawi_mask$X2012.02.01, axes = FALSE, box = FALSE, zlim = c(-2, 2))
box(lwd = 1)
points(malawi$longitude, malawi$latitude, pch = 20, col = "darkred",  cex = 0.5)
# Add the Malawi boundary as a thin border
plot(st_geometry(malawi_boundary), add = TRUE, border = "black", lwd = 0.5)
plot(malawi_mask$X2015.02.01, axes = FALSE, box = FALSE, zlim = c(-2, 2))
box(lwd = 1)
points(malawi$longitude, malawi$latitude, pch = 20, col = "darkred",  cex = 0.5)
# Add the Malawi boundary as a thin border
plot(st_geometry(malawi_boundary), add = TRUE, border = "black", lwd = 0.5)
plot(malawi_mask$X2018.02.01, axes = FALSE, box = FALSE, zlim = c(-2, 2))
box(lwd = 1)
points(malawi$longitude, malawi$latitude, pch = 20, col = "darkred",  cex = 0.5)
# Add the Malawi boundary as a thin border
plot(st_geometry(malawi_boundary), add = TRUE, border = "black", lwd = 0.5)
